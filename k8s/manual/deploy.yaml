apiVersion: v1
kind: Secret
metadata:
  name: demo-app-secret
type: Opaque
stringData:
  GITHUB_TOKEN: ""
  MONGODB_PASSWORD: password
  PG_PASSWORD: password
  MYSQL_PASSWORD: password
  VALKEY_PASSWORD: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-app-config
data:
  GITHUB_ORG: percona
  CONTROL_PANEL_PORT: "3001"
  LOAD_MYSQL: "true"
  LOAD_POSTGRES: "true"
  LOAD_MONGODB: "true"
  VALKEY_ADDR: valkey-service
  VALKEY_PORT: "6379"
  VALKEY_DB: "0"
  MONGODB_USER: databaseAdmin
  MONGODB_DB: dataset
  MONGODB_HOST: "localhost"
  MONGODB_PORT: "27017"
  PG_USER: postgres
  PG_DB: dataset
  PG_HOST: "localhost"
  PG_PORT: "5432"
  MYSQL_USER: root
  MYSQL_DB: dataset
  MYSQL_HOST: "localhost"
  MYSQL_PORT: "3306"
  DELAY_MINUTES: "3"
  DEBUG: "true"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: valkey-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data/valkey"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: valkey-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkey
spec:
  replicas: 1
  selector:
    matchLabels:
      app: valkey
  template:
    metadata:
      labels:
        app: valkey
    spec:
      containers:
      - name: valkey
        image: valkey/valkey:8
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "600m"
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: valkey-data
          mountPath: /data
      volumes:
      - name: valkey-data
        persistentVolumeClaim:
          claimName: valkey-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: valkey-service
spec:
  selector:
    app: valkey
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-web
  annotations:
    kubernetes.io/change-cause: "Update to latest image"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app-web
  template:
    metadata:
      labels:
        app: demo-app-web
      annotations:
        kubernetes.io/change-cause: "Update to latest image"
    spec:
      containers:
      - name: demo-app-web
        image: dbazhenov/demo_app_web:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: demo-app-config
        - secretRef:
            name: demo-app-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "600m"
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-web-service
spec:
  selector:
    app: demo-app-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-dataset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app-dataset
  template:
    metadata:
      labels:
        app: demo-app-dataset
    spec:
      containers:
      - name: demo-app-dataset
        image: dbazhenov/demo_app_dataset:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "1"
        envFrom:
        - configMapRef:
            name: demo-app-config
        - secretRef:
            name: demo-app-secret
        env:
        - name: DEBUG
          value: "false"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-load
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app-load
  template:
    metadata:
      labels:
        app: demo-app-load
    spec:
      containers:
      - name: demo-app-load
        image: dbazhenov/demo_app_load:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "6Gi"
            cpu: "3"
        envFrom:
        - configMapRef:
            name: demo-app-config
        - secretRef:
            name: demo-app-secret
        env:
        - name: LOAD_MYSQL
          value: "true"
        - name: LOAD_POSTGRES
          value: "true"
        - name: LOAD_MONGODB
          value: "true"

