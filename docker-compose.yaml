version: '3.7'
services:
  valkey:
    image: valkey/valkey:8
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "${VALKEY_PORT}:${VALKEY_PORT}"
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  demo_app_dataset:
    image: dbazhenov/demo_app_dataset:0.1.2
    depends_on:
      valkey:
        condition: service_healthy
    env_file:
      - .env

  demo_app_web:
    image: dbazhenov/demo_app_web:0.1.2
    depends_on:
      valkey:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${CONTROL_PANEL_PORT}:${CONTROL_PANEL_PORT}"

  demo_app_load:
    image: dbazhenov/demo_app_load:0.1.2
    depends_on:
      valkey:
        condition: service_healthy
    env_file:
      - .env

  postgres:
    image: "percona/percona-distribution-postgresql:16.2-multi"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      LANG: en_US.utf8
      PGDATA: /data/db
    volumes:
      - pgdata:/data/db
      - ./data/init/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports: 
      - "5432:5432"

  mongodb:
    image: "percona/percona-server-mongodb:7.0-multi"
    volumes:
      - mongodata:/data/db
      - ./data/init/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: databaseAdmin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: dataset
    ports:
      - "27017:27017"

  mysql:
    image: "percona/percona-server:8.3.0-1.1-multi"
    volumes:
      - mysqldata:/var/lib/mysql
      - ./data/init/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: dataset
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-proot-password"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "3306:3306"
    command: >
      --performance-schema --innodb_monitor_enable=all
      --slow_query_log --slow_query_log_file=/mysql/slowlogs/slow.log --long_query_time=0

  pmm-server:
      image: percona/pmm-server:2
      platform: "linux/amd64"
      container_name: pmm-server
      restart: always
      ports:
        - 8081:80
        - 443:443
      volumes:
        - pmm-data:/srv
      environment:
        - DISABLE_TELEMETRY=0

  pmm-client-postgres:
    image: percona/pmm-client:2
    platform: "linux/amd64"
    container_name: pmm-client-postgres
    depends_on:
      pmm-server:
        condition: service_healthy
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: "pmm-admin status --wait=10s; pmm-admin add postgresql --username=postgres --password=password --host=postgres --port=5432 --query-source=pgstatmonitor"

  pmm-client-mysql:
    image: percona/pmm-client:2
    platform: "linux/amd64"
    container_name: pmm-client-mysql
    depends_on:
      mysql:
        condition: service_healthy
      pmm-server:
        condition: service_healthy
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: "pmm-admin status --wait=10s; pmm-admin add mysql --query-source=perfschema --username=root --password=password --host=mysql --port=3306"

  pmm-client-mongodb:
    image: percona/pmm-client:2
    platform: "linux/amd64"
    container_name: pmm-client-mongodb
    depends_on:
      pmm-server:
        condition: service_healthy
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: "pmm-admin status --wait=10s; pmm-admin add mongodb --username=databaseAdmin --password=password --host=mongodb --port=27017 --query-source=profiler"

volumes:
  mongodata:
  pgdata:
  mysqldata:
  valkey_data:
  pmm-data:
